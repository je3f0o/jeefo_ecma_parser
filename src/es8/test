(id = value) => {};
this;
null;
true;
false;
3.14;
"double quote string";
'single quote string';
3..property;
id_ref = assignment_expression;
super.property = assignment_expression;
object.property = assignment_expression;
fn = function       () {};
fn = function await () {};
fn = function yield () {};
async_fn = async function () {};
async_fn = async function yield () {};
gen = function * () {};
gen = function * await () {};

/*
(async (p1, {}, []) => {})
//fn = async (p1, {}, [], p2 = 1, {} = {}, [] = []) => {}

async function async_fn () {
    await async_fn();
    return 1;
}

fn = async function          () {}
fn = async param => {}

fn = () => {}

o = {
    static,

    3.14   : value,
    "str"  : value,
    await  : value,
    [true] : value,

    3.14   () {},
    "str"  () {},
    async  () {},
    [true] () {},

    get 3.14  () {},
    get "str" () {},
    get async () {},
    get [str] () {},

    set 3.14  (v) {},
    set "str" (v) {},
    set await (v) {},
    set [str] (v) {},

    async 3.14       () {},
    async "str"      () {},
    async await      () {},
    async [computed] () {},
}

class A extends B {
    ;

    3.14       () {}
    "str"      () {}
    static     () {}
    [computed] () {}

    // Getters
    get 3.14       () {}
    get "str"      () {}
    get static     () {}
    get [computed] () {}

    // Setter
    set 3.14       (v) {}
    set "str"      (v) {}
    set static     (v) {}
    set [computed] (v) {}

    // Statics
    static 3.14       () {}
    static "str"      () {}
    static static     () {}
    static [computed] () {}

    // Static getters
    static get 3.14       () {}
    static get "str"      () {}
    static get static     () {}
    static get [computed] () {}

    // Static setters
    static set 3.14       (v) {}
    static set "str"      (v) {}
    static set static     (v) {}
    static set [computed] (v) {}
}
*/
